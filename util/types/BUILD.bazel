package(
    default_visibility = ["//:__subpackages__"],
)

cc_library(
    name = "any_storage",
    hdrs = ["any_storage.hpp"],
)

cc_test(
    name = "any_storage_test",
    srcs = ["any_storage_test.cpp"],
    deps = [
        ":any_storage",
        "@googletest//:gtest",
        "@googletest//:gtest_main",
    ],
)

cc_library(
    name = "tmpl",
    hdrs = ["tmpl.hpp"],
)

cc_test(
    name = "tmpl_test",
    srcs = ["tmpl_test.cpp"],
    deps = [
        ":tmpl",
        "@googletest//:gtest_main",
    ],
)

cc_library(
    name = "overload",
    hdrs = ["overload.hpp"],
)

cc_library(
    name = "name",
    hdrs = ["name.hpp"],
    deps = [
        "@abseil-cpp//absl/cleanup",
        "@abseil-cpp//absl/strings:str_format",
    ],
)

cc_test(
    name = "name_test",
    srcs = ["name_test.cpp"],
    deps = [
        ":name",
        "@googletest//:gtest",
        "@googletest//:gtest_main",
    ],
)

cc_library(
    name = "opt",
    hdrs = ["opt.hpp"],
    deps = [
        ":any_storage",
        ":tmpl",
    ],
)

cc_test(
    name = "opt_test",
    srcs = ["opt_test.cpp"],
    deps = [
        ":opt",
        "@googletest//:gtest",
        "@googletest//:gtest_main",
    ],
)

cc_library(
    name = "strong_types",
    hdrs = ["strong_types.hpp"],
)

cc_test(
    name = "strong_types_test",
    srcs = ["strong_types_test.cpp"],
    deps = [
        ":strong_types",
        "@googletest//:gtest",
        "@googletest//:gtest_main",
    ],
)

cc_library(
    name = "choice",
    hdrs = ["choice.hpp"],
    deps = ["@abseil-cpp//absl/strings"],
)

cc_library(
    name = "choice_matchers",
    hdrs = ["choice_matchers.hpp"],
    deps = [
        "//util/types:name",
        "@googletest//:gtest",
    ],
)

cc_test(
    name = "choice_matchers_test",
    srcs = ["choice_matchers_test.cpp"],
    deps = [
        ":choice",
        ":choice_matchers",
        "@googletest//:gtest",
        "@googletest//:gtest_main",
    ],
)

cc_test(
    name = "choice_test",
    srcs = ["choice_test.cpp"],
    deps = [
        ":choice",
        "@googletest//:gtest_main",
    ],
)


cc_library(
    name = "forward_ref",
    hdrs = ["forward_ref.hpp"],
    deps = ["@abseil-cpp//absl/functional:any_invocable"],
)
