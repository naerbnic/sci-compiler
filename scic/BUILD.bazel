package(
    default_visibility = [":scic_internal"],
)

package_group(
    name = "scic_internal",
    packages = [
        "//scic/...",
    ],
)

cc_binary(
    name = "scic",
    srcs = [
        "alist.cpp",
        "alist.hpp",
        "anode.cpp",
        "anode.hpp",
        "asm.cpp",
        "asm.hpp",
        "banner.cpp",
        "banner.hpp",
        "builtins.cpp",
        "builtins.hpp",
        "casts.hpp",
        "class.cpp",
        "class.hpp",
        "common.hpp",
        "compile.cpp",
        "compile.hpp",
        "compiler.cpp",
        "compiler.hpp",
        "config.cpp",
        "config.hpp",
        "debug_utils.hpp",
        "define.cpp",
        "define.hpp",
        "error.cpp",
        "error.hpp",
        "expr.cpp",
        "expr.hpp",
        "global_compiler.cpp",
        "global_compiler.hpp",
        "input.cpp",
        "input.hpp",
        "list.cpp",
        "list.hpp",
        "listing.cpp",
        "listing.hpp",
        "loop.cpp",
        "loop.hpp",
        "memtype.hpp",
        "object.cpp",
        "object.hpp",
        "opcodes.hpp",
        "optimize.cpp",
        "optimize.hpp",
        "output.cpp",
        "output.hpp",
        "parse.cpp",
        "parse.hpp",
        "parse_class.cpp",
        "parse_class.hpp",
        "parse_context.cpp",
        "parse_context.hpp",
        "parse_object.cpp",
        "parse_object.hpp",
        "pnode.cpp",
        "pnode.hpp",
        "proc.cpp",
        "proc.hpp",
        "public.cpp",
        "public.hpp",
        "reference.hpp",
        "resource.cpp",
        "resource.hpp",
        "sc.cpp",
        "sc.hpp",
        "selector.cpp",
        "selector.hpp",
        "share.cpp",
        "share.hpp",
        "sol.hpp",
        "symbol.cpp",
        "symbol.hpp",
        "symtbl.cpp",
        "symtbl.hpp",
        "symtypes.hpp",
        "text.cpp",
        "text.hpp",
        "token.cpp",
        "token.hpp",
        "toktypes.cpp",
        "toktypes.hpp",
        "update.cpp",
        "update.hpp",
        "varlist.cpp",
        "varlist.hpp",
        "vocab.hpp",
    ],
    visibility = ["//visibility:public"],
    deps = [
        ":chartype",
        "//util/io:buffer",
        "//util/platform",
        "@abseil-cpp//absl/cleanup",
        "@abseil-cpp//absl/container:btree",
        "@abseil-cpp//absl/debugging:failure_signal_handler",
        "@abseil-cpp//absl/debugging:stacktrace",
        "@abseil-cpp//absl/debugging:symbolize",
        "@abseil-cpp//absl/strings",
        "@abseil-cpp//absl/strings:str_format",
        "@argparse",
    ],
)

cc_library(
    name = "chartype",
    srcs = ["chartype.cpp"],
    hdrs = ["chartype.hpp"],
)
